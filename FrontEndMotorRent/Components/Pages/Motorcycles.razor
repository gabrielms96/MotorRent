@page "/motorcycles"
@using FrontEndMotorRent.Models
@using FrontEndMotorRent.Services
@inject MotorcycleService MotorcycleService
@inject IJSRuntime JSRuntime
@rendermode InteractiveServer

<PageTitle>Motocicletas - MotorRent</PageTitle>

<div class="container-fluid">
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <h1 class="h2">Gerenciamento de Motocicletas</h1>
                <button class="btn btn-primary" @onclick="ShowCreateModal">
                    <i class="bi bi-plus-circle"></i> Nova Motocicleta
                </button>
            </div>
        </div>
    </div>

    @if (isLoading)
    {
        <div class="d-flex justify-content-center">
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Carregando...</span>
            </div>
        </div>
    }
    else if (motorcycles != null && motorcycles.Any())
    {
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title mb-0">Lista de Motocicletas</h5>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-striped table-hover">
                                <thead class="table-dark">
                                    <tr>
                                        <th>ID</th>
                                        <th>Placa</th>
                                        <th>Modelo</th>
                                        <th>Ano</th>
                                        <th>Ações</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var motorcycle in motorcycles)
                                    {
                                        <tr>
                                            <td>@motorcycle.Id</td>
                                            <td><span class="badge bg-primary">@motorcycle.LicensePlate</span></td>
                                            <td>@motorcycle.Model</td>
                                            <td>
                                                @if (motorcycle.Year == 2024)
                                                {
                                                    <span class="badge bg-warning">@motorcycle.Year</span>
                                                }
                                                else
                                                {
                                                    <span>@motorcycle.Year</span>
                                                }
                                            </td>
                                            <td>
                                                <button class="btn btn-sm btn-outline-info me-1" @onclick="() => ViewMotorcycle(motorcycle.Id!)">
                                                    <i class="bi bi-eye"></i>
                                                </button>
                                                <button class="btn btn-sm btn-outline-danger" @onclick="() => DeleteMotorcycle(motorcycle.Id!)">
                                                    <i class="bi bi-trash"></i>
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="text-center">
            <div class="alert alert-info">
                <i class="bi bi-info-circle"></i> Nenhuma motocicleta encontrada.
            </div>
        </div>
    }
</div>

<!-- Modal para criar nova motocicleta -->
@if (showCreateModal)
{
    <div class="modal show d-block" tabindex="-1" style="background-color: rgba(0,0,0,0.5);">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Nova Motocicleta</h5>
                    <button type="button" class="btn-close" @onclick="HideCreateModal"></button>
                </div>
                <div class="modal-body">
                    <EditForm Model="newMotorcycle" OnValidSubmit="CreateMotorcycle">
                        <DataAnnotationsValidator />
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label">Identificador</label>
                                    <InputText class="form-control" @bind-Value="newMotorcycle.Id" placeholder="ID único da motocicleta" />
                                    <ValidationMessage For="@(() => newMotorcycle.Id)" />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label">Placa</label>
                                    <InputText class="form-control" @bind-Value="newMotorcycle.LicensePlate" placeholder="ABC-1234" />
                                    <ValidationMessage For="@(() => newMotorcycle.LicensePlate)" />
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label">Modelo</label>
                                    <InputText class="form-control" @bind-Value="newMotorcycle.Model" placeholder="Honda CG 160" />
                                    <ValidationMessage For="@(() => newMotorcycle.Model)" />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label">Ano</label>
                                    <InputNumber class="form-control" @bind-Value="newMotorcycle.Year" placeholder="2024" />
                                    <ValidationMessage For="@(() => newMotorcycle.Year)" />
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" @onclick="HideCreateModal">Cancelar</button>
                            <button type="submit" class="btn btn-primary" disabled="@isCreating">
                                @if (isCreating)
                                {
                                    <span class="spinner-border spinner-border-sm me-2"></span>
                                }
                                Criar Motocicleta
                            </button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
}

@code {
    private List<MotorcycleDto>? motorcycles;
    private bool isLoading = true;
    private bool showCreateModal = false;
    private bool isCreating = false;
    private MotorcycleCreateDto newMotorcycle = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadMotorcycles();
    }

    private async Task LoadMotorcycles()
    {
        isLoading = true;
        motorcycles = (await MotorcycleService.GetAllMotorcyclesAsync())?.ToList();
        isLoading = false;
    }

    private void ShowCreateModal()
    {
        newMotorcycle = new MotorcycleCreateDto();
        showCreateModal = true;
    }

    private void HideCreateModal()
    {
        showCreateModal = false;
        newMotorcycle = new MotorcycleCreateDto();
    }

    private async Task CreateMotorcycle()
    {
        isCreating = true;
        
        var success = await MotorcycleService.CreateMotorcycleAsync(newMotorcycle);
        
        if (success)
        {
            await JSRuntime.InvokeVoidAsync("alert", "Motocicleta criada com sucesso!");
            HideCreateModal();
            await LoadMotorcycles();
        }
        else
        {
            await JSRuntime.InvokeVoidAsync("alert", "Erro ao criar motocicleta. Verifique se a placa não está duplicada.");
        }
        
        isCreating = false;
    }

    private async Task ViewMotorcycle(string id)
    {
        var motorcycle = await MotorcycleService.GetMotorcycleByIdAsync(id);
        if (motorcycle != null)
        {
            await JSRuntime.InvokeVoidAsync("alert", $"Detalhes:\nID: {motorcycle.Id}\nPlaca: {motorcycle.LicensePlate}\nModelo: {motorcycle.Model}\nAno: {motorcycle.Year}");
        }
    }

    private async Task DeleteMotorcycle(string id)
    {
        var confirmed = await JSRuntime.InvokeAsync<bool>("confirm", "Tem certeza que deseja excluir esta motocicleta?");
        if (confirmed)
        {
            var success = await MotorcycleService.DeleteMotorcycleAsync(id);
            if (success)
            {
                await JSRuntime.InvokeVoidAsync("alert", "Motocicleta excluída com sucesso!");
                await LoadMotorcycles();
            }
            else
            {
                await JSRuntime.InvokeVoidAsync("alert", "Erro ao excluir motocicleta.");
            }
        }
    }
} 